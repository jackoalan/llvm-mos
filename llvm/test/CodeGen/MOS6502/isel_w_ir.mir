# RUN: llc -mtriple=mos6502 -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck %s
--- |
  @.str = constant [1 x i8] c"X"
  define void @ldimm_global() {
    entry:
      ret void
  }
  define void @load_indexed() {
    entry:
      ret void
  }
  define void @store_indexed() {
    entry:
      ret void
  }
---
name: ldimm_global
# CHECK-LABEL: name: ldimm_global
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    %0:any(p0) = G_GLOBAL_VALUE @.str
    RTS implicit %0
# CHECK:      %1:gpr = LDimm target-flags(lo) @.str
# CHECK-NEXT: %2:gpr = LDimm target-flags(hi) @.str
# CHECK-NEXT: %0:zp_ptr = REG_SEQUENCE %1, %subreg.sublo, %2, %subreg.subhi
...
---
name: load_indexed
# CHECK-LABEL: name: load_indexed
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    %0:any(p0) = G_GLOBAL_VALUE @.str
    %1:any(s8) = G_IMPLICIT_DEF
    %2:any(p0) = G_PTR_ADD %0, %1
    %3:any(s8) = G_LOAD %2 :: (load 1)
    RTS implicit %3
# CHECK:      %1:xy = IMPLICIT_DEF
# CHECK-NEXT: %3:gpr = LDidx @.str, %1
# CHECK-NEXT: RTS implicit %3
...
---
name: store_indexed
# CHECK-LABEL: name: store_indexed
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    %0:any(s8) = G_IMPLICIT_DEF
    %1:any(p0) = G_GLOBAL_VALUE @.str
    %2:any(s8) = G_IMPLICIT_DEF
    %3:any(p0) = G_PTR_ADD %1, %2
    G_STORE %0, %3 :: (store 1)
    RTS
# CHECK:      %0:ac = IMPLICIT_DEF
# CHECK-NEXT: %2:xy = IMPLICIT_DEF
# CHECK-NEXT: STidx %0, @.str, %2
# CHECK-NEXT: RTS
...
